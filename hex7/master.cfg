# -*- python -*-
# ex: set filetype=python:

from buildbot.plugins import *
import datetime

c = BuildmasterConfig = {}
c['workers'] = [worker.Worker("hex7-worker", "pass")]
c['protocols'] = {'pb': {'port': 9989}}
c['services'] = []
c['title'] = "Hex7 CICD"
c['titleURL'] = "https://hex7.com"
c['buildbotURL'] = "http://hex7.com:8010/"
c['www'] = dict(port=8010, plugins=dict(waterfall_view={}, console_view={}, grid_view={}))
c['db'] = { 'db_url' : "sqlite:///state.sqlite", }



c['change_source'] = []
c['change_source'].append(changes.GitPoller('git://github.com/nand0p/covid19.git',
                                            workdir='covid19-workdir',
                                            branch='master',
                                            pollInterval=300))
c['change_source'].append(changes.GitPoller('git://github.com/nand0p/hex7.git',
                                            workdir='hex7-workdir',
                                            branch='master',
                                            pollInterval=300))
c['change_source'].append(changes.GitPoller('git://github.com/nand0p/damnswank.git',
                                            workdir='damnswank-workdir',
                                            branch='master',
                                            pollInterval=300))



c['schedulers'] = []
c['schedulers'].append(schedulers.SingleBranchScheduler(name="cicd-covid19",
                                                        change_filter=util.ChangeFilter(branch='master'),
                                                        treeStableTimer=None,
                                                        builderNames=["cicd-covid19"]))
c['schedulers'].append(schedulers.ForceScheduler(name="force-covid19", builderNames=["cicd-covid19"]))
c['schedulers'].append(schedulers.SingleBranchScheduler(name="cicd-hex7",
                                                        change_filter=util.ChangeFilter(branch='master'),
                                                        treeStableTimer=None,
                                                        builderNames=["cicd-hex7"]))
c['schedulers'].append(schedulers.ForceScheduler(name="force-hex7", builderNames=["cicd-hex7"]))
c['schedulers'].append(schedulers.SingleBranchScheduler(name="cicd-damnswank",
                                                        change_filter=util.ChangeFilter(branch='master'),
                                                        treeStableTimer=None,
                                                        builderNames=["cicd-damnswank"]))
c['schedulers'].append(schedulers.ForceScheduler(name="force-damnswank", builderNames=["cicd-damnswank"]))



c['builders'] = []
factory_covid19 = util.BuildFactory()
factory_covid19.addStep(steps.Git(repourl='git://github.com/nand0p/covid19.git', mode='incremental'))
factory_covid19.addStep(steps.ShellCommand(command=["echo", "--build-arg", "DATE=" + str(datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S"))]))
factory_covid19.addStep(steps.ShellCommand(command=["echo", "--build-arg", util.Interpolate('REVISION=%(prop:got_revision)s')]))
factory_covid19.addStep(steps.ShellCommand(command=["docker", "build", "--file", "Dockerfile", "--tag", "covid19-cicd", "--build-arg", util.Interpolate('REVISION=%(prop:got_revision)s'), "--build-arg", "DATE=" + str(datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")), "."]))
factory_covid19.addStep(steps.ShellCommand(command=["docker", "kill", "covid19-cicd"], warnOnFailure=True))
factory_covid19.addStep(steps.ShellCommand(command=["docker", "run", "--rm", "-d", "--name", "covid19-cicd", "-p", "5000:5000", "covid19-cicd"]))
c['builders'].append(util.BuilderConfig(name="cicd-covid19", workernames=["hex7-worker"], factory=factory_covid19)) 

factory_hex7 = util.BuildFactory()
factory_hex7.addStep(steps.Git(repourl='git://github.com/nand0p/hex7.git', mode='incremental'))
factory_hex7.addStep(steps.ShellCommand(command=["ls", "-la"]))
factory_hex7.addStep(steps.ShellCommand(command=["echo", "--build-arg", "DATE=" + str(datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S"))]))
factory_hex7.addStep(steps.ShellCommand(command=["echo", "--build-arg", util.Interpolate('REVISION=%(prop:got_revision)s')]))
factory_hex7.addStep(steps.ShellCommand(command=["docker", "build", "--file", "Dockerfile", "--tag", "hex7-cicd", "--build-arg", util.Interpolate('REVISION=%(prop:got_revision)s'), "--build-arg", "DATE=" + str(datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")), "."]))
factory_hex7.addStep(steps.ShellCommand(command=["docker", "kill", "hex7-cicd"], warnOnFailure=True))
factory_hex7.addStep(steps.ShellCommand(command=["docker", "run", "--rm", "-d", "--name", "hex7-cicd", "-p", "8000:8000", "hex7-cicd"]))
c['builders'].append(util.BuilderConfig(name="cicd-hex7", workernames=["hex7-worker"], factory=factory_hex7)) 

factory_damnswank = util.BuildFactory()
factory_damnswank.addStep(steps.Git(repourl='git://github.com/nand0p/damnswank.git', mode='incremental'))
factory_damnswank.addStep(steps.ShellCommand(command=["ls", "-la"]))
factory_damnswank.addStep(steps.ShellCommand(command=["echo", "--build-arg", "DATE=" + str(datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S"))]))
factory_damnswank.addStep(steps.ShellCommand(command=["echo", "--build-arg", util.Interpolate('REVISION=%(prop:got_revision)s')]))
factory_damnswank.addStep(steps.ShellCommand(command=["docker", "build", "--file", "Dockerfile", "--tag", "damnswank-cicd", "--build-arg", util.Interpolate('REVISION=%(prop:got_revision)s'), "--build-arg", "DATE=" + str(datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")), "."]))
factory_damnswank.addStep(steps.ShellCommand(command=["docker", "kill", "damnswank-cicd"], warnOnFailure=True))
factory_damnswank.addStep(steps.ShellCommand(command=["docker", "run", "--rm", "-d", "--name", "damnswank-cicd", "-p", "5000:5000", "damnswank-cicd"]))
c['builders'].append(util.BuilderConfig(name="cicd-damnswank", workernames=["hex7-worker"], factory=factory_damnswank)) 
